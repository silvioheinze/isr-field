# Generated by Django 5.2.7 on 2025-10-06 12:02

from django.db import migrations


def create_standard_fields(apps, schema_editor):
    """Create standard fields for all existing datasets"""
    DataSet = apps.get_model('frontend', 'DataSet')
    CustomField = apps.get_model('frontend', 'CustomField')
    
    # Standard field definitions
    standard_fields = [
        {'name': 'name', 'label': 'Entry Name', 'field_type': 'text', 'order': 0},
        {'name': 'usage_code1', 'label': 'Usage Code 1', 'field_type': 'integer', 'order': 1},
        {'name': 'usage_code2', 'label': 'Usage Code 2', 'field_type': 'integer', 'order': 2},
        {'name': 'usage_code3', 'label': 'Usage Code 3', 'field_type': 'integer', 'order': 3},
        {'name': 'cat_inno', 'label': 'Category Innovation', 'field_type': 'integer', 'order': 4},
        {'name': 'cat_wert', 'label': 'Category Value', 'field_type': 'integer', 'order': 5},
        {'name': 'cat_fili', 'label': 'Category Facility', 'field_type': 'integer', 'order': 6},
        {'name': 'year', 'label': 'Year', 'field_type': 'integer', 'order': 7},
    ]
    
    for dataset in DataSet.objects.all():
        for field_data in standard_fields:
            # Check if field already exists
            if not CustomField.objects.filter(dataset=dataset, name=field_data['name']).exists():
                CustomField.objects.create(
                    dataset=dataset,
                    name=field_data['name'],
                    label=field_data['label'],
                    field_type=field_data['field_type'],
                    is_standard_field=True,
                    required=(field_data['name'] == 'year'),  # Year is required by default
                    enabled=True,
                    order=field_data['order']
                )


def reverse_create_standard_fields(apps, schema_editor):
    """Remove standard fields"""
    CustomField = apps.get_model('frontend', 'CustomField')
    CustomField.objects.filter(is_standard_field=True).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('frontend', '0010_unify_field_configuration'),
    ]

    operations = [
        migrations.RunPython(create_standard_fields, reverse_create_standard_fields),
    ]
